// you can also use imports, for example:
// import java.util.*;

// you can write to stdout for debugging purposes, e.g.
// System.out.println("this is a debug message");

class Solution {
    public int[] solution(int N, int[] P, int[] Q) {
        // write your code in Java SE 8
        int max = 50_000;
        int[] minFactors = minFactors(max);
        int[] semiPrimes = getFirstSemiPrimes(max, minFactors);
        
        int m = P.length;
        int[] ans = new int[m];
        for (int i=0; i < P.length; i++) {
            ans[i] = semiPrimes[Q[i]] - semiPrimes[P[i]-1];
        }

        return ans;
    }

    private int[] minFactors(int N) {
        int[] factors = new int[N+1];
        int sqrtN = (int) Math.sqrt(N);
        int i = 2;
        int k;
        while (i <= sqrtN) {
            if (factors[i] == 0) {
                k = i * i;
                while (k <= N) {
                    if (factors[k] == 0) {
                        factors[k] = i;
                    }
                    k += i;
                }
            }
            i++;
        }

        return factors;
    }

    private boolean isSemiPrime(int N, int[] minFactors) {
        int factorNum = 0;
        while (minFactors[N] > 0) {
            N /= minFactors[N];
            factorNum++;
        }
        return factorNum == 1;
    }

    private int[] getFirstSemiPrimes(int N, int[] minFactors) {
        int[] res = new int[N+1];

        for (int i = 2; i <= N; i++) {
            res[i] += res[i-1] + (isSemiPrime(i, minFactors) ? 1 : 0);
        }

        return res;
    }
}